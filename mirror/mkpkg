# Make the MIRROR package.

$ifeq (hostid, unix)  !(clear;date)  $endif
$call update
$ifeq (hostid, unix)  !(date)  $endif
$exit

update:
	$call update@src

	$ifeq (HOSTID, vms) $purge [...] $endif
	$purge mirrorbin$
	;

# STRIP -- Strip the MIRROR directories of all sources and other files not
# required to run the system, or for user programming.

strip:
	!rmfiles -f lib/strip.mirror
	;

# SUMMARY -- [UNIX] mkpkg summary: output a summary of the spooled mkpkg
# output, omitting most of the mundane chatter.  Used to scan large spool
# files for errors.

summary:
	$ifeq (HOSTID, unix)
	    ! grep -v ':$$' spool | grep -v '^xc' | grep -v '^ar'\
	    | grep -v '^check file'
	$else
	    $echo "mkpkg summary only available on a UNIX system"
	$endif
	;

# SUN/IRAF multiple architecture support.
# ----------------------------------------

showfloat:				# show current float option
	$verbose off
	!$(hlib)/mkfloat.csh
	;
f68881:					# install f68881 binaries
	$verbose off
	$set DIRS = "lib src"
	!$(hlib)/mkfloat.csh f68881 -d $(DIRS)
	;
ffpa:					# install ffpa binaries
	$verbose off
	$set DIRS = "lib src"
	!$(hlib)/mkfloat.csh ffpa -d $(DIRS)
	;
fswitch:				# install fswitch binaries
	$verbose off
	$set DIRS = "lib src"
	!$(hlib)/mkfloat.csh fswitch -d $(DIRS)
	;
fsoft:					# install fsoft binaries
	$verbose off
	$set DIRS = "lib src"
	!$(hlib)/mkfloat.csh fsoft -d $(DIRS)
	;
sparc:					# install sparc binaries
	$verbose off
	$set DIRS = "lib src"
	!$(hlib)/mkfloat.csh sparc -d $(DIRS)
	;
i386:					# install i386 binaries
	$verbose off
	$set DIRS = "lib src"
	!$(hlib)/mkfloat.csh i386 -d $(DIRS)
	;
vax:					# install vax binaries
	$verbose off
	$set DIRS = "lib src"
	!$(hlib)/mkfloat.csh vax -d $(DIRS)
	;
generic:				# install generic binaries
	$verbose off
	$set DIRS = "lib src"
	!$(hlib)/mkfloat.csh generic -d $(DIRS)
	;
vw:					# install vw binaries
	$verbose off
	$set DIRS = "lib src"
	!$(hlib)/mkfloat.csh vw -d $(DIRS)
	@src/oven/voven/
	;
ssun:
	$verbose off
	$set DIRS = "lib src"
	!$(hlib)/mkfloat.csh ssun -d $(DIRS)
	;
